#include<iostream>
using namespace std;

int n, a, b, c;
int dp[5][5000];
int lengths[5];

int get_max(int a, int b, int c) {
	int retValue = -1;
	int arr[5] = { 0, };
	arr[0] = a;
	arr[1] = b;
	arr[2] = c;
	for (int i = 0; i < 3; i++) {
		retValue = (retValue < arr[i]) ? arr[i] : retValue;
	}
	return retValue;
}

int main() {
	cin >> n >> a >> b >> c;
	int ans = -1;
	dp[0][0] = 0;
	dp[1][0] = 0;
	dp[2][0] = 0;
	lengths[0] = a;
	lengths[1] = b;
	lengths[2] = c;

	for (int i = 1; i <= n; i++) {
		for (int j = 0; j < 3; j++) {
			int temp = i - lengths[j];
			if (temp < 0) {
				dp[j][i] = -1;
			}
			else if (temp == 0) {
				dp[j][i] = 1;
			}
			else {
				int max_value = get_max(dp[0][temp], dp[1][temp], dp[2][temp]);
				if (max_value == -1) {
					dp[j][i] = -1;
				}
				else {
					dp[j][i] = max_value + 1;
				}
			}
		}
	}
	ans = get_max(dp[0][n], dp[1][n], dp[2][n]);
	cout << ans << endl;
	return 0;
}
